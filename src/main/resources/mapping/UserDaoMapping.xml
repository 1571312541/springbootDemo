<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhangchao.springboot.dao.UserDao">
    <sql id="selectSql">
        id,username,password,age,job
    </sql>
    <sql id="insertSql">
        username,password,age,job
    </sql>
    <sql id="insertSql2">
        id,uid,class_name
    </sql>
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>
    <select id="getUserById" resultType="user" parameterType="java.lang.Integer">
        select <include refid="selectSql"></include> from user where id = #{id}
    </select>
 <!-- =========================================================================== -->
    <resultMap id="userMap" type="user">
         <id column="uid" property="id"></id>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <collection property="roles" ofType="role">
            <id column="rid" property="id"></id>
            <result column="name" property="name"></result>
            <collection property="permissions" ofType="permission">
                <id column="pid" property="id"></id>
                <result column="resource" property="resource"></result>
            </collection>
        </collection>
    </resultMap>

    <select id="getUserByName" resultMap="userMap" parameterType="java.lang.String">
        SELECT r.name,u.id uid,r.id rid,p.id pid,u.`username`,u.`password`,p.`name`,p.`resource` FROM role r
        LEFT JOIN user_role ur
        ON r.`id` = ur.`role_id`
        LEFT JOIN USER u
        ON u.`id` = ur.`user_id`
        LEFT JOIN role_permission rp
        ON rp.`role_id` = r.`id`
        LEFT JOIN permission p
        ON p.`id` = rp.`permission_id`
        WHERE u.username=#{username};
    </select>

<!-- =========================================================================== -->

    <select id="getUser" resultType="user">
        SELECT <include refid="selectSql"></include> FROM USER
    </select>

<!-- =========================================================================== -->
    <!--该方法addUser和addUserClass用来测试事务-->
    <insert id="addUser" parameterType="user">
        <selectKey resultType="integer" order="AFTER" keyProperty="id">
          select last_insert_id()
        </selectKey>
        insert into user(<include refid="insertSql"></include>) values(
          #{username},#{password},#{age},#{job}
        )
    </insert>

    <insert id="addUserClass" parameterType="userClass">
        insert into user_class (<include refid="insertSql2"></include>) values(
          #{id},#{uid},#{className}
        )
    </insert>
</mapper>
